### rename this file to .env and edit the settings to your liking

# Timezone
TIMEZONE='Europe/Amsterdam'

# Your Home consumes roughyl this amount of energy (in kWh) per 24 hours.
DAILY_HOME_ENERGY_CONSUMPTION=16.0

# Module/Feature toggles
# You can select one or more modules to run but make sure that `mqtt_client` is always enabled and is always the
# module defined. This is because the `mqtt_client` module is the one that is responsible for the MQTT connection
# and is a blocking function which will not return while the other modules run in their own threads.
ACTIVE_MODULES='[{"sync": {"ev_charge_controller": false, "energy_broker": false }, "async": {"mqtt_client": true, "tibber_api": false }}]'

# Enable / disable appliance run scheduling at lowest prices (requires a homeconnect2mqtt bridge in local network)
HOME_CONNECT_APPLIANCE_SCHEDULING=False

# Enable / disable dynamic buy and sell decisions
DYNAMIC_ESS_NET_METERING_ENABLED=False
# Rate in Watts to export energy to the grid from the ESS
ESS_EXPORT_AC_SETPOINT=-10000.0

# Percentage of battery capacity to retain for own use (ie. stop energy sale at 65% battery state of charge)
DYNAMIC_ESS_BATT_MIN_SOC=50.0

VICTRON_OPTIMIZED_CHARGING=1
TIBBER_UPDATES_ENABLED=0

# the max amount you want to pay in cents per kWh from Tibber (energy supplier) when charging the ESS
MAX_TIBBER_BUY_PRICE=0.40

# !!! Warning !!!
# Unless mitigated in some other way, if the grid is lost when using this mode, the loads will also
# lose power until grid power is restored or manual intervention is done (switch back to inverter mode on).
# Use this carefully.
#
# If energy prices are equal or lower to this, switch to grid consumption (victron inverter pass-through mode)
SWITCH_TO_GRID_PRICE_THRESHOLD=0.22

### ev_charge_controller ESS options
# LOAD_RESERVATION defines the amount of solar energy produced in Watts that you want to reserve for charging your ESS
# and running house (and other) loads. When the MINIMUM_ESS_SOC percentage is reached, this amount will be reduced with
# a division of the LOAD_RESERVATION by the LOAD_REDUCTION_FACTOR to begin favoring the charge of your electric vehicle.
LOAD_RESERVATION=1
LOAD_REDUCTION_FACTOR=1

# battery will charge at this voltage when under MIMIMUM_ESS_SOC
BATTERY_ABSORPTION_VOLTAGE=57.0
# battery charge voltage will be reduced to this voltage WHEN MIMIMUM_ESS_SOC is reached
BATTERY_FLOAT_VOLTAGE=57.0
MINIMUM_ESS_SOC=90
# batter max voltage will drop to this when MAXIMUM_ESS_SOC is reached
BATTERY_FULL_VOLTAGE=55.8
MAXIMUM_ESS_SOC=95

### ABB B2x  kWh Meter integration
# if you have integrated an ABB B23/B24 RS-485 meter into your venusOS system you can toggle this option on
# and configure the topic it will read/write to in conf.py.  This will allow for bypassing the load reservation
# functionality and result in more precise and accurate surplus power calculations
ABB_METER_INTEGRATION=0
