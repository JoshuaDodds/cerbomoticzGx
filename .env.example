### rename this file to .env and edit the settings to your liking

# Timezone
TIMEZONE='Europe/Amsterdam'

# Docker version and container repo credentials
VERSION="$(TZ=${TIMEZONE} date +%Y.%m.%d.%H)"
CR_PAT=""

# Victron
CERBOGX_IP="0.0.0.0"
VRM_PORTAL_ID='XXXXXXXXXXXXXXXX'

# Domoticz
DZ_URL_PREFIX="http://<IP ADDRESS>:80/json.htm?type=command&param=udevice&idx="

# Module/Feature toggles
# You can select one or more modules to run but make sure that `mqtt_client` is always enabled and is always the
# module defined. This is because the `mqtt_client` module is the one that is responsible for the MQTT connection
# and is a blocking function which will not return while the other modules run in their own threads.
ACTIVE_MODULES='[{
                  "sync": {
                            "ev_charge_controller": false,
                            "energy_broker": false
                          },

                 "async": {
                            "mqtt_client": true,
                            "tibber_api": false
                          }
                }]'

VICTRON_OPTIMIZED_CHARGING=0
TIBBER_UPDATES_ENABLED=0

# the max amount you want to pay in cents per kWh from Tibber (energy supplier)
MAX_TIBBER_BUY_PRICE=0.30

### ev_charge_controller ESS options
# LOAD_RESERVATION defines the amount of solar energy produced in Watts that you want to reserve for charging your ESS
# and running house (and other) loads. When the MINIMUM_ESS_SOC percentage is reached, this amount will be reduced with
# a division of the LOAD_RESERVATION by the LOAD_REDUCTION_FACTOR to begin favoring the charge of your electric vehicle.
LOAD_RESERVATION=400
LOAD_REDUCTION_FACTOR=2

# battery will charge at this voltage when under MIMIMUM_ESS_SOC
BATTERY_ABSORPTION_VOLTAGE=55.0
# battery charge voltage will be reduced to this voltage WHEN MIMIMUM_ESS_SOC is reached
BATTERY_FLOAT_VOLTAGE=54.8
MINIMUM_ESS_SOC=95
# batter max voltage will drop to this when MAXIMUM_ESS_SOC is reached
BATTERY_FULL_VOLTAGE=54.0
MAXIMUM_ESS_SOC=98

### ABB B2x  kWh Meter integration
# if you have integrated an ABB B23/B24 RS-485 meter into your venusOS system you can toggle this option on
# and configure the topic it will read/write to in conf.py.  This will allow for bypassing the load reservation
# functionality and result in more precise and accurate surplus power calculations
ABB_METER_INTEGRATION=0

# tesla credentials and home address LAT and LONG
TESLA_EMAIL=elon@tesla.com
HOME_ADDRESS_LAT=54.1345
HOME_ADDRESS_LONG=4.1234

# HomeConnect options
CLIENTID=""
CLIENTSECRET=""
REDIRECTURI=""

# Tibber options
TIBBER_ACCESS_TOKEN="XXXXXXXXXXXXX"


# Pushover API Access
PO_USER_ID=""
PO_API_KEY=""

# AWS Credentials
AWS_ACCESS_KEY=""
AWS_SECRET_KEY=""
